version: 2.1

executors:
  go:
    working_directory: ~/go/src/github.com/hashicorp/nomad
    docker:
      - image: dantoml/nomad-build-image:latest
    environment:
      GOMAXPROCS: 1
  docker-builder:
    working_directory: ~/go/src/github.com/hashicorp/nomad
    machine: true # TODO: Find latest docker image id

jobs:
  build-deps-image:
    executor: docker-builder
    steps:
      - checkout
      - run: docker pull dantoml/nomad-build-image:latest || true
      - run: docker build -t dantoml/nomad-build-image:$CIRCLE_SHA1 ./.circleci/build-images/go
      - run: docker push dantoml/nomad-build-image:$CIRCLE_SHA1

  lint:
    executor: go
    environment:
      GOPATH: /home/circleci/go
    steps:
      - checkout
      - run: make check

  test-fast:
    executor: go
    environment:
      GOTEST_PKGS_EXCLUDE: "./api|./client|./drivers/docker|./drivers/rkt|./drivers/exec|./nomad"
      GOPATH: /home/circleci/go
      GOTESTSUM_JUNITFILE: /tmp/results.xml
    steps:
      - checkout
      - run: make travis
      - store_test_results:
          path: /tmp/results.xml

  test-pkg-client:
    executor: go
    environment:
      GOTEST_PKGS: "./client"
      GOPATH: /home/circleci/go
      GOTESTSUM_JUNITFILE: /tmp/results.xml
    steps:
      - checkout
      - run: make travis
      - store_test_results:
          path: /tmp/results.xml

  test-pkg-nomad:
    executor: go
    environment:
      GOTEST_PKGS: "./nomad"
      GOPATH: /home/circleci/go
      GOTESTSUM_JUNITFILE: /tmp/results.xml
    steps:
      - checkout
      - run: make travis
      - store_test_results:
          path: /tmp/results.xml

  test-pkg-api:
    executor: go
    environment:
      GOTEST_PKGS: "./api"
      GOPATH: /home/circleci/go
      GOTESTSUM_JUNITFILE: /tmp/results.xml
    steps:
      - checkout
      - run: make travis
      - store_test_results:
          path: /tmp/results.xml

  test-priv:
    machine: true
    working_directory: ~/go/src/github.com/hashicorp/nomad
    environment:
      GOTEST_PKGS_: "./drivers/docker|./drivers/rkt|./drivers/exec"
      GOTESTSUM_JUNITFILE: /tmp/results.xml
      GOPATH: /home/circleci/go
      GOVERSION: 1.11.5
      PROTOC_VERSION: 3.6.1
    steps:
      - checkout
      - run:
          name: install go
          command: |
            sudo rm -rf /usr/local/go
            wget https://dl.google.com/go/go$GOVERSION.linux-amd64.tar.gz
            sudo tar -C /usr/local -xzf go$GOVERSION.linux-amd64.tar.gz
      - run:
          name: install protoc
          command: |
            sudo rm -rf /usr/bin/protoc

            wget -q -O /tmp/protoc.zip https://github.com/google/protobuf/releases/download/v${PROTOC_VERSION}/protoc-${PROTOC_VERSION}-linux-x86_64.zip \
                && unzip /tmp/protoc.zip -d /tmp/protoc3 \
                && sudo mv /tmp/protoc3/bin/* /usr/local/bin/ \
                && sudo mv /tmp/protoc3/include/* /usr/local/include/ \
                && sudo ln -s /usr/local/bin/protoc /usr/bin/protoc \
                && rm -rf /tmp/protoc*
      - run: make bootstrap
      - run: PATH="$GOPATH/bin:/usr/local/go/bin:$PATH" make travis
      - store_test_results:
          path: /tmp/results.xml

  build-website:
    # setting the working_directory along with the checkout path allows us to not have
    # to cd into the website/ directory for commands
    working_directory: ~/project/website
    docker:
      - image: hashicorp/middleman-hashicorp:0.3.35
    steps:
      - checkout:
          path: ~/project

      # restores gem cache
      - restore_cache:
          key: static-site-gems-v1-{{ checksum "Gemfile.lock" }}

      - run:
          name: install gems
          command: bundle check || bundle install --path vendor/bundle --retry=3

      # saves gem cache if we have changed the Gemfile
      - save_cache:
          key: static-site-gems-v1-{{ checksum "Gemfile.lock" }}
          paths:
            - ~/project/website/vendor/bundle

      - run:
          name: middleman build
          command: bundle exec middleman build

      - run:
          name: website deploy
          command: ./scripts/deploy.sh

workflows:
  build-test:
    jobs:
      - lint
      - test-fast
      - test-pkg-client
      - test-pkg-nomad
      - test-pkg-api
      - test-priv
      # - build-deps-image:
      #     context: dani-test
      #     filters:
      #       branches:
      #         only: dani/circleci

  website:
    jobs:
      - build-website:
          context: static-sites
          filters:
            branches:
              only: stable-website
